schema {
    query: Query
}

type Query {
    query(input: StoreQuery!): StoreQueryResult!
    qlQuery(input: String!, formatting: Boolean): StoreQueryResult!
    store: Store!
}

interface Calculation {
    id: String!
    name: String!
    description: String
    expr: String!
    type: String!
    format: String
}

type Metric implements Calculation {
    id: String!
    name: String!
    description: String
    expr: String!
    type: String!
    format: String
    dimensions: [Dimension!]!
}

scalar Range
scalar Values

type Dimension implements Calculation {
    id: String!
    name: String!
    description: String
    expr: String!
    type: String!
    format: String
}

type Store {
    metrics: [Metric!]!
    dimensions: [Dimension!]!
}


input StoreQuery {
    metrics: [String!]!
    dimensions: [String!]!
    filters: [String!]!
    formatting: Boolean!
}

scalar Record

type StoreQueryResult {
    metadata: StoreQueryResultMetadata!
    data: [Record!]!
}

type StoreQueryResultMetadata {
    rawQuery: String!
    columns: [Calculation!]!
    locale: String!
    formatting: Boolean!
    store: Store!
}
