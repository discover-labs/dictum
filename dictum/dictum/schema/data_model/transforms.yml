# filters
gt:
  name: ">"
  args: [value]
  expr: "@ > value"
  return_type: bool
ge:
  name: ">="
  args: [value]
  expr: "@ >= value"
  return_type: bool
lt:
  name: "<"
  args: [value]
  expr: "@ = value"
  return_type: bool
le:
  name: "<="
  args: [value]
  expr: "@ <= value"
  return_type: bool
eq:
  name: "="
  args: [value]
  expr: "@ = value"
  return_type: bool
ne:
  name: "!="
  args: [value]
  expr: "@ <> value"
  return_type: bool
isnull:
  name: isnull
  expr: "@ is null"
  return_type: bool
isnotnull:
  name: isnotnull
  expr: "@ is not null"
  return_type: bool
inrange:
  name: in range
  args: [min, max]
  expr: "@ >= min and @ <= max"
  return_type: bool
last:
  name: last
  args: [n, part]
  expr: datediff(part, @, now()) < n and datediff(part, @, now()) >= 0
  return_type: bool

# transforms
step:
  name: step
  args: [size]
  expr: "@ // size * size"
  return_type: int
datepart:
  name: date part
  args: [part]
  expr: datepart(part, @)
  return_type: int
  format:
    kind: number
    pattern: "0000"
datetrunc:
  name: date trunc
  args: [part]
  expr: datetrunc(part, @)
year:
  name: date year
  expr: datepart('year', @)
  return_type: int
quarter:
  name: date quarter
  expr: datepart('quarter', @)
  return_type: int
month:
  name: date month
  expr: datepart('month', @)
  return_type: int
week:
  name: date week
  expr: datepart('week', @)
  return_type: int
day:
  name: date day
  expr: datepart('day', @)
  return_type: int
hour:
  name: date hour
  expr: datepart('hour', @)
  return_type: int
minute:
  name: date minute
  expr: datepart('minute', @)
  return_type: int
second:
  name: date second
  expr: datepart('second', @)
  return_type: int
